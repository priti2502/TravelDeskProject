// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelDesk.Context;

#nullable disable

namespace TravelDesk.Migrations
{
    [DbContext(typeof(TravelDeskContext))]
    partial class TravelDeskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelDesk.Models.AirBooking", b =>
                {
                    b.Property<int>("AirBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirBookingId"));

                    b.Property<string>("AadharCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FlightType")
                        .HasColumnType("int");

                    b.Property<string>("PassportFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirBookingId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AirBookings");
                });

            modelBuilder.Entity("TravelDesk.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6752),
                            DepartmentName = "IT",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 2,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6754),
                            DepartmentName = "HR",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6756),
                            DepartmentName = "Admin",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 4,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6757),
                            DepartmentName = "Travel",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("TravelDesk.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReasonForTraveling")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TravelDesk.Models.HotelBooking", b =>
                {
                    b.Property<int>("HotelBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelBookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysOfStay")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("mealPreference")
                        .HasColumnType("int");

                    b.Property<int>("mealRequired")
                        .HasColumnType("int");

                    b.HasKey("HotelBookingId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HotelBookings");
                });

            modelBuilder.Entity("TravelDesk.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6567),
                            IsActive = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6570),
                            IsActive = true,
                            RoleName = "TravelAdmin"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6572),
                            IsActive = true,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 18, 19, 53, 55, 163, DateTimeKind.Local).AddTicks(6574),
                            IsActive = true,
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("TravelDesk.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TravelDesk.Models.AirBooking", b =>
                {
                    b.HasOne("TravelDesk.Models.Employee", "Employee")
                        .WithMany("AirBookings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TravelDesk.Models.HotelBooking", b =>
                {
                    b.HasOne("TravelDesk.Models.Employee", "Employee")
                        .WithMany("HotelBookings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TravelDesk.Models.User", b =>
                {
                    b.HasOne("TravelDesk.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDesk.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TravelDesk.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TravelDesk.Models.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TravelDesk.Models.Employee", b =>
                {
                    b.Navigation("AirBookings");

                    b.Navigation("HotelBookings");
                });

            modelBuilder.Entity("TravelDesk.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
